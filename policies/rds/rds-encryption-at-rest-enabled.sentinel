# This policy requires resources of type `aws_db_instance` have attribute "storage_encrypted" set to true.

# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: BUSL-1.1

# Imports

import "tfplan/v2" as tfplan
import "tfresources" as tf
import "report" as report
import "collection" as collection
import "collection/maps" as maps

# Constants

const = {
	"policy_name":              "rds-encryption-at-rest-enabled",
	"message":                  "'aws_db_instance' 리소스의 'storage_encrypted' 속성은 true로 설정되어야 합니다. 자세한 내용은 https://docs.aws.amazon.com/securityhub/latest/userguide/rds-controls.html#rds-3 을 참조하세요.",
	"resource_aws_db_instance": "aws_db_instance",
	"storage_encrypted":        "storage_encrypted",
}

# Variables

resources = tf.plan(tfplan.planned_values.resources).type(const.resource_aws_db_instance).resources
violations = collection.reject(resources, func(res) {
	return maps.get(res, "values.storage_encrypted", false) is true
})

summary = {
	"policy_name": "rds-encryption-at-rest-enabled",
	"violations": map violations as _, v {
		{
			"address":        v.address,
			"module_address": v.module_address,
			"message":        const.message,
		}
	},
}

# Outputs

print(report.generate_policy_report(summary))

# Rules

main = rule {
	violations is empty
}
